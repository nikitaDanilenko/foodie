name: Run Scala tests

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Prepare environment, and run Scala tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: foodie_test
          POSTGRES_PASSWORD: 2JoGcxcx8ibZrOdQ9y3zv9cJyB20xkvzwlaRC8Vz
          POSTGRES_PORT: 5432
          POSTGRES_USER: foodie_test
        ports:
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'
        # Workaround: A placeholder test initializes all migrations.
        # Then the database is populated with CNF data via the standard script.
        # After the initialization, the actual tests can be performed.
      - name: Run migrations
        run: sbt 'testOnly *Initializer'
      - name: Populate with CNF data
        run: |
          export PGPASSWORD='2JoGcxcx8ibZrOdQ9y3zv9cJyB20xkvzwlaRC8Vz'
          psql -h localhost -U foodie_test -d foodie_test -c "grant all privileges on database foodie_test to foodie_test;"
          psql -h localhost -U foodie_test -d foodie_test -c "grant pg_read_server_files to foodie_test;"
          psql -h localhost -U foodie_test -d foodie_test -c "\ir scripts/populate_cnf_db.sql;"
      - name: Run tests
        run: sbt test
